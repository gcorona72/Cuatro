<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <title>Gestión de Invitados</title>
  <link href="https://fonts.googleapis.com/css?family=Montserrat" rel="stylesheet">
  <style>
    /* -------------------------
       RESET / ESTILOS GENERALES
       ------------------------- */
    html, body {
      margin: 0;
      padding: 0;
      background-color: #EBECF0;
      font-family: 'Montserrat', sans-serif;
      letter-spacing: -0.2px;
      font-size: 16px;
      color: #000;
      text-shadow: 1px 1px 1px #FFF;
    }

    /* Contenedor principal */
    .container {
      max-width: 500px;
      margin: 40px auto; /* Espacio superior/inferior y centrado horizontal */
      background-color: #EBECF0;
      padding: 16px;
      border-radius: 8px;
      text-align: center;
    }

    /* Formularios y segment */
    form {
      padding: 16px;
      margin: 0 auto;
    }
    .segment {
      padding: 16px 0;
    }

    /* Botones e inputs */
    button, input {
      border: 0;
      outline: 0;
      font-size: 16px;
      border-radius: 320px;
      padding: 16px;
      background-color: #EBECF0;
      text-shadow: 1px 1px 0 #FFF;
    }
    button {
      color: #61677C;
      font-weight: 600;
      box-shadow: -5px -5px 20px #FFF, 5px 5px 20px #BABECC;
      transition: all 0.2s ease-in-out;
      cursor: pointer;
      margin-top: 8px;
    }
    button:hover {
      box-shadow: -2px -2px 5px #FFF, 2px 2px 5px #BABECC;
    }
    button:active {
      box-shadow: inset 1px 1px 2px #BABECC, inset -1px -1px 2px #FFF;
    }
    input {
      margin-right: 8px;
      box-shadow: inset 2px 2px 5px #BABECC, inset -5px -5px 10px #FFF;
      width: 100%;
      box-sizing: border-box;
      transition: all 0.2s ease-in-out;
      appearance: none;
      -webkit-appearance: none;
    }
    input:focus {
      box-shadow: inset 1px 1px 2px #BABECC, inset -1px -1px 2px #FFF;
    }

    /* Etiquetas y grupos */
    label {
      display: block;
      margin-bottom: 8px;
      width: 100%;
    }
    .input-group {
      display: flex;
      align-items: center;
      justify-content: flex-start;
      margin-bottom: 8px;
    }
    .input-group label {
      margin: 0;
      flex: 1;
    }
    hr {
      margin: 16px 0;
    }
  </style>
</head>
<body>
<div class="container">
  <h1>Gestión de Invitados</h1>

  <!-- Sección para Cargar Invitados -->
  <div class="segment">
    <button id="btnCargar">Cargar Invitados</button>
    <div id="lista"></div>
  </div>

  <hr>

  <!-- Formulario para Agregar Invitado -->
  <h2>Agregar Invitado</h2>
  <form id="formInvitado">
    <div class="input-group">
      <label for="nombre">Nombre:</label>
      <input type="text" id="nombre" name="nombre" />
    </div>
    <div class="input-group">
      <label for="acompanante">Acompañante:</label>
      <input type="checkbox" id="acompanante" name="acompanante" />
    </div>
    <button type="button" id="btnAgregar">Agregar</button>
  </form>

  <hr>

  <!-- Formulario para Actualizar Invitado -->
  <h2>Actualizar Invitado</h2>
  <form id="formActualizar">
    <div class="input-group">
      <label for="idUpdate">ID:</label>
      <input type="number" id="idUpdate" />
    </div>
    <div class="input-group">
      <label for="nombreUpdate">Nuevo nombre:</label>
      <input type="text" id="nombreUpdate" />
    </div>
    <div class="input-group">
      <label for="acompananteUpdate">Acompañante:</label>
      <input type="checkbox" id="acompananteUpdate" />
    </div>
    <button type="button" id="btnActualizar">Actualizar</button>
  </form>

  <hr>

  <!-- Formulario para Eliminar Invitado -->
  <h2>Eliminar Invitado</h2>
  <form id="formEliminar">
    <div class="input-group">
      <label for="idDelete">ID:</label>
      <input type="number" id="idDelete" />
    </div>
    <button type="button" id="btnEliminar">Eliminar</button>
  </form>
</div>

<script>
  // Función para cargar invitados
  function cargarInvitados() {
    fetch('/api/guests')
            .then(resp => resp.json())
            .then(data => {
              const divLista = document.getElementById('lista');
              divLista.innerHTML = '';
              if (!data.length) {
                divLista.innerHTML = '<p>No hay invitados registrados.</p>';
                return;
              }
              data.forEach(g => {
                const p = document.createElement('p');
                p.textContent = `#${g.id} - ${g.nombre} (Acompañante: ${g.acompanante})`;
                divLista.appendChild(p);
              });
            })
            .catch(err => console.error(err));
  }

  // Función para agregar invitado
  function agregarInvitado() {
    const nombre = document.getElementById('nombre').value;
    const acompanante = document.getElementById('acompanante').checked;

    fetch('/api/guests', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ nombre: nombre, acompanante: acompanante })
    })
            .then(resp => resp.json())
            .then(result => {
              alert('¡Invitado agregado con éxito!');
              // Limpia el formulario
              document.getElementById('nombre').value = '';
              document.getElementById('acompanante').checked = false;
              // Refresca la lista
              cargarInvitados();
            })
            .catch(err => console.error(err));
  }

  // Función para actualizar invitado
  function actualizarInvitado() {
    const id = document.getElementById('idUpdate').value;
    const nuevoNombre = document.getElementById('nombreUpdate').value;
    const newAcomp = document.getElementById('acompananteUpdate').checked;

    fetch(`/api/guests/${id}`, {
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ nombre: nuevoNombre, acompanante: newAcomp })
    })
            .then(resp => resp.json())
            .then(result => {
              alert('¡Invitado actualizado con éxito!');
              // Limpia el formulario
              document.getElementById('idUpdate').value = '';
              document.getElementById('nombreUpdate').value = '';
              document.getElementById('acompananteUpdate').checked = false;
              // Refresca la lista
              cargarInvitados();
            })
            .catch(err => console.error(err));
  }

  // Función para eliminar invitado
  function eliminarInvitado() {
    const id = document.getElementById('idDelete').value;

    fetch(`/api/guests/${id}`, {
      method: 'DELETE'
    })
            .then(resp => resp.json())
            .then(result => {
              alert('¡Invitado eliminado con éxito!');
              // Limpia el formulario
              document.getElementById('idDelete').value = '';
              // Refresca la lista
              cargarInvitados();
            })
            .catch(err => console.error(err));
  }

  // Asignar eventos
  document.getElementById('btnCargar').addEventListener('click', cargarInvitados);
  document.getElementById('btnAgregar').addEventListener('click', agregarInvitado);
  document.getElementById('btnActualizar').addEventListener('click', actualizarInvitado);
  document.getElementById('btnEliminar').addEventListener('click', eliminarInvitado);

  // Al iniciar la página, cargamos la lista
  cargarInvitados();
</script>
</body>
</html>
